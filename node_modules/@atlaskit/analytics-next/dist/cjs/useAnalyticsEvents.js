"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var use_memo_one_1 = require("use-memo-one");
var AnalyticsReactContext_1 = require("./AnalyticsReactContext");
var UIAnalyticsEvent_1 = tslib_1.__importDefault(require("./UIAnalyticsEvent"));
var noop = function () { return []; };
function useAnalyticsEvents() {
    var analyticsContext = react_1.useContext(AnalyticsReactContext_1.AnalyticsReactContext);
    var contextRef = react_1.useRef(analyticsContext);
    contextRef.current.getAtlaskitAnalyticsEventHandlers =
        analyticsContext.getAtlaskitAnalyticsEventHandlers;
    contextRef.current.getAtlaskitAnalyticsContext =
        analyticsContext.getAtlaskitAnalyticsContext;
    var createAnalyticsEvent = use_memo_one_1.useCallbackOne(function (payload) {
        if (process.env.NODE_ENV !== 'production' &&
            (contextRef.current.getAtlaskitAnalyticsEventHandlers === null ||
                contextRef.current.getAtlaskitAnalyticsContext === null)) {
            /* eslint-disable-next-line no-console */
            console.error("\n@atlaskit/analytics-next\n---\nNo compatible <AnalyticsListener /> was found to fire this analytics event.\nUse of the useAnalyticsEvents() hook requires a parent <AnalyticsListener /> from @atlaskit/analytics-next@^6.3.0 or above.\nSee: https://atlaskit.atlassian.com/packages/design-system/analytics-next/docs/reference#AnalyticsListener\n");
        }
        var getAtlaskitAnalyticsContext = contextRef.current.getAtlaskitAnalyticsContext || noop;
        var getAtlaskitAnalyticsEventHandlers = contextRef.current.getAtlaskitAnalyticsEventHandlers || noop;
        return new UIAnalyticsEvent_1.default({
            context: getAtlaskitAnalyticsContext(),
            handlers: getAtlaskitAnalyticsEventHandlers(),
            payload: payload,
        });
    }, []);
    return {
        createAnalyticsEvent: createAnalyticsEvent,
    };
}
exports.useAnalyticsEvents = useAnalyticsEvents;
//# sourceMappingURL=useAnalyticsEvents.js.map